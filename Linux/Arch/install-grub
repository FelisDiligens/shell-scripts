#!/bin/bash

# Edit the variables below first to match your system:
# (in most circumstances, you probably don't have to change them at all)

esp_mount_point="/boot/efi" # The EFI System Partition mount point if you use GPT/UEFI boot. Default is "/boot/efi".
mbr_block_device="" # The block device ("/dev/sdX", not partition!) used if you use MBR/Legacy boot. Leave blank for autodetect.
bootloader_id="" # You can get the bootloader id by running "efibootmgr", or leave blank for autodetect. Default is "GRUB".

# Then place this file in /usr/sbin/
# sudo cp -v ./install-grub /usr/sbin/install-grub
# sudo chmod +x /usr/sbin/install-grub
# and then run
# sudo install-grub

# Sources:
# https://wiki.archlinux.org/title/GRUB#Installation
# https://wiki.archlinux.org/title/GRUB#Installation_2
# https://wiki.archlinux.org/title/GRUB#Generate_the_main_configuration_file
# https://discovery.endeavouros.com/system-rescue/repair-a-non-booting-grub/2021/03/


# Check if we're running as root:
if [ "$EUID" -ne 0 ]; then
    echo "Please run as root"
    exit 1
fi

# Ensure bootloader_id is set:
if [ -z "$bootloader_id" ]; then
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        case "$ID" in
            arch|archarm)
                bootloader_id="Arch"
            ;;
            endeavouros)
                bootloader_id="EndeavourOS"
            ;;
            manjaro|manjaro-arm)
                bootloader_id="Manjaro"
            ;;
            *)
                bootloader_id="$NAME"
            ;;
        esac
    else
        bootloader_id="GRUB"
    fi
fi

# Ensure mbr_block_device is set:
if [ -z "$mbr_block_device" ]; then
    # Crude auto-detect:
    # mbr_block_device="$(mount | grep "on / " | sed -E "s/(\/dev\/(sd[a-z]|nvme[0-9]n[0-9])).*/\1/")"
    mbr_block_device="/dev/$(lsblk | grep -E "part /\$" | grep -o -E "(sd[a-z]|nvme[0-9]n[0-9])")"
fi

# Check if the bootloader_id is in output of efibootmgr:
if [ -d "/sys/firmware/efi" ] && [ -x "$(command -v efibootmgr)" ]; then
    bootloader_ids="$(efibootmgr | grep -E "Boot[0-9]{4}\*" | sed -E "s/Boot[0-9]{4}\*\s?//" | sed "s/HD(.*//" | sort | uniq)"
    if ! echo "$bootloader_ids" | grep -q "$bootloader_id"; then
        echo "Bootloader ID \"$bootloader_id\" not found in the output of efibootmgr:"
        echo "$bootloader_ids" | sed -E "s/^(.*)/- \1/"
        echo
        echo "This may result in a duplicate bootloader entry."
        read -p "Continue anyways [y/N]? " -n 1 -r
        echo
        if ! [[ $REPLY =~ ^[Yy]$ ]]; then
            echo "Abort."
            exit 1
        fi
        echo
    fi
fi

# Determine boot configuration (UEFI vs Legacy):
if [ -d "/sys/firmware/efi" ]; then
    # There are various ways to check if Secure Boot is enabled... which is best?
    # dmesg | grep -i -E "secure\s?boot" | grep -q "enabled"
    # bootctl status &>2 | grep -i "secure boot" | grep -q "enabled"
    # mokutil --sb-state | grep -q "SecureBoot enabled"
    if [ -x "$(command -v mokutil)" ] && mokutil --sb-state | grep "SecureBoot enabled" -q; then
        echo "Detected EFI with Secure Boot"
        echo "ESP mount point: $esp_mount_point"
        echo
        read -p "Install GRUB [y/N]? " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            grub-install --target=x86_64-efi --efi-directory="$esp_mount_point" --bootloader-id="$bootloader_id" -modules="normal test efi_gop efi_uga search echo linux all_video gfxmenu gfxterm_background gfxterm_menu gfxterm loadenv configfile tpm" && echo "Done."
        else
            echo "Abort."
        fi
    else
        echo "Detected EFI"
        echo "ESP mount point: $esp_mount_point"
        echo
        read -p "Install GRUB [y/N]? " -n 1 -r
        echo
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            grub-install --target=x86_64-efi --efi-directory="$esp_mount_point" --bootloader-id="$bootloader_id" && echo "Done."
        else
            echo "Abort."
        fi
    fi
else
    echo "Detected legacy boot"
    echo "Block device: $mbr_block_device"
    echo
    read -p "Install GRUB [y/N]? " -n 1 -r
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        grub-install --target=i386-pc "$mbr_block_device" && echo "Done."
    else
        echo "Abort."
    fi
fi